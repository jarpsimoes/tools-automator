name: Pylint

on:
  push:
    branches: 
      - main
      - feature/*

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      working-directory: ./cli
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install -r requirements
    - name: Analysing the code with pylint
      working-directory: ./cli
      run: |
        #pylint `ls -R|grep .py$|xargs`
        pylint `find . -name "*.py"`
      
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install dependencies
      working-directory: ./cli
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements
        pip install coverage
    - name: Unit test
      working-directory: ./cli
      run: |
        coverage run -m unittest tests/*.py
        coverage xml
    - name: Codacy Coverage Reporter
      # You may pin to the exact commit or the version.
      # uses: codacy/codacy-coverage-reporter-action@31721d7c5d2357955879f3ecbae83bf199c16000
      uses: codacy/codacy-coverage-reporter-action@v1.1.0
      with:
        # API project token to retrieve your remote Codacy configuration for the project being analyzed
        project-token:  ${{ secrets.CODACY_API_TOKEN }}
        # API account token to retrieve your remote Codacy configuration for the project being analyzed
        api-token: ${{ secrets.CODACY_API_TOKEN }}
        # Optional comma separated list of coverage reports to send to Codacy
        coverage-reports: cli/coverage.xml
