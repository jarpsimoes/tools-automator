---
- name: Configure MySQL VM
  hosts: database
  become: true
  vars_files:
    - ../config.yaml
  tasks:
    - name: Install MySQL
      yum:
        name: 
          - https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql-community-libs-5.7.36-1.el7.x86_64.rpm
          - https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql-community-client-5.7.36-1.el7.x86_64.rpm
          - https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql-community-common-5.7.36-1.el7.x86_64.rpm
          - https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql-community-server-5.7.36-1.el7.x86_64.rpm
        state: present
        disable_gpg_check: true
    - name: Install MySQL Python
      pip:
        name: pymysql
        extra_args: --user
      when: ansible_os_family == 'RedHat'
    - name: Install MySQL Python
      pip:
        name: python-mysqldb
        extra_args: --user
      when: ansible_os_family == 'Debian'
    - name: Enable and start service
      service:
        name: mysqld
        enabled: true
        state: started
    - name: Detect and properly set root password
      stat:
        path: /root/.my.cnf
      register: r
    - name: Get MySQL Root Password
      shell: "echo `grep 'temporary.*root@localhost' /var/log/mysqld.log | sed 's/.*root@localhost: //'`"
      args:
        executable: /usr/bin/bash
      register: mysql_root_password_initial
      when: not r.stat.exists
    - name: Set new password from temporary password
      shell: 'mysql -e "SET PASSWORD = PASSWORD(''{{ mysql_password }}'');" --connect-expired-password -uroot -p"{{ mysql_root_password_initial.stdout }}"'
      when: not r.stat.exists
    - name: Create Firewall Rule
      firewalld:
        port: 3306/tcp
        permanent: true
        state: enabled
